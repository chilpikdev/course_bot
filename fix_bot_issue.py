# fix_bot_issue.py
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å python-telegram-bot

import os
import sys
import subprocess
import importlib

def run_command(command):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –∏ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    try:
        print(f"   –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è: {command}")
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        return result.returncode == 0, result.stdout, result.stderr
    except Exception as e:
        return False, "", str(e)

def check_and_remove_cached_modules():
    """–£–¥–∞–ª–∏—Ç—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π...")
    
    # –£–¥–∞–ª—è–µ–º __pycache__ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    for root, dirs, files in os.walk('.'):
        if '__pycache__' in dirs:
            pycache_path = os.path.join(root, '__pycache__')
            try:
                import shutil
                shutil.rmtree(pycache_path)
                print(f"   –£–¥–∞–ª–µ–Ω: {pycache_path}")
            except:
                pass
    
    # –£–¥–∞–ª—è–µ–º .pyc —Ñ–∞–π–ª—ã
    for root, dirs, files in os.walk('.'):
        for file in files:
            if file.endswith('.pyc'):
                try:
                    os.remove(os.path.join(root, file))
                    print(f"   –£–¥–∞–ª–µ–Ω: {file}")
                except:
                    pass

def main():
    print("üõ†Ô∏è  –ü–û–õ–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï python-telegram-bot")
    print("=" * 50)
    
    # 1. –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞
    check_and_remove_cached_modules()
    
    # 2. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –≤–µ—Ä—Å–∏–π...")
    success, stdout, stderr = run_command("pip list | grep -i telegram")
    if stdout:
        print("   –¢–µ–∫—É—â–∏–µ telegram –ø–∞–∫–µ—Ç—ã:")
        print(f"   {stdout.strip()}")
    
    # 3. –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö telegram –ø–∞–∫–µ—Ç–æ–≤
    print("\nüóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö telegram –ø–∞–∫–µ—Ç–æ–≤...")
    telegram_packages = [
        "python-telegram-bot",
        "telegram", 
        "python-telegram-bot-raw",
        "PTB"
    ]
    
    for package in telegram_packages:
        success, stdout, stderr = run_command(f"pip uninstall {package} -y")
        if "Successfully uninstalled" in stdout:
            print(f"   ‚úÖ {package} —É–¥–∞–ª–µ–Ω")
        elif "not installed" in stderr:
            print(f"   ‚ÑπÔ∏è  {package} –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"   ‚ö†Ô∏è  {package}: {stderr.strip()}")
    
    # 4. –û—á–∏—Å—Ç–∫–∞ pip –∫–µ—à–∞
    print("\nüßΩ –û—á–∏—Å—Ç–∫–∞ pip –∫–µ—à–∞...")
    run_command("pip cache purge")
    
    # 5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    print("\nüì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ python-telegram-bot 20.8...")
    success, stdout, stderr = run_command("pip install python-telegram-bot==20.8 --no-cache-dir")
    if success:
        print("   ‚úÖ python-telegram-bot 20.8 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {stderr}")
        print("\nüîÑ –ü–æ–ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±...")
        
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
        success, stdout, stderr = run_command("pip install --force-reinstall --no-deps python-telegram-bot==20.8")
        if success:
            print("   ‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞")
        else:
            print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: {stderr}")
            return False
    
    # 6. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    dependencies = [
        "asgiref==3.7.2",
        "pytz==2023.3",
        "httpx>=0.24.0",  # –î–ª—è python-telegram-bot
        "certifi"
    ]
    
    for dep in dependencies:
        success, stdout, stderr = run_command(f"pip install {dep}")
        if success:
            print(f"   ‚úÖ {dep} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        else:
            print(f"   ‚ö†Ô∏è  {dep}: {stderr.strip()}")
    
    # 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏...")
    success, stdout, stderr = run_command("pip list | grep -i telegram")
    if success and "python-telegram-bot" in stdout:
        print("   ‚úÖ python-telegram-bot —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:")
        print(f"   {stdout.strip()}")
    else:
        print("   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π")
        return False
    
    # 8. –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞...")
    try:
        import telegram
        print(f"   ‚úÖ telegram –º–æ–¥—É–ª—å: –≤–µ—Ä—Å–∏—è {telegram.__version__}")
        
        from telegram.ext import Application
        print("   ‚úÖ Application –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        from telegram import Bot
        print("   ‚úÖ Bot –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
    except ImportError as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    
    # 9. –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –µ—â–µ —Ä–∞–∑
    print("\nüßπ –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞...")
    check_and_remove_cached_modules()
    
    print("\nüéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("\nüìã –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:")
    print("1. python simple_bot_test.py  # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç")
    print("2. python check_config.py     # –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
    print("3. python run_bot.py          # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞")
    
    return True

if __name__ == '__main__':
    try:
        success = main()
        if not success:
            print("\n‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å")
            print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
            print("python -m venv venv_new")
            print("source venv_new/bin/activate")
            print("pip install -r requirements.txt")
            sys.exit(1)
    except KeyboardInterrupt:
        print("\n‚ùå –ü—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)